<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-12T09:32:36.482Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k8s集群使用caliico遇到的问题</title>
    <link href="http://yoursite.com/2018/10/12/k8s%E9%9B%86%E7%BE%A4%E4%BD%BF%E7%94%A8caliico%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/12/k8s集群使用caliico遇到的问题/</id>
    <published>2018-10-12T02:52:00.000Z</published>
    <updated>2018-10-12T09:32:36.482Z</updated>
    
    <content type="html"><![CDATA[<p>搭建kubernetes集群，服务器由openstack提供，通过kubeadm安装高可用。采用coredns，calico网络组件。</p><h1 id="calico搭建："><a href="#calico搭建：" class="headerlink" title="calico搭建："></a>calico搭建：</h1><h2 id="一：calico服务启动"><a href="#一：calico服务启动" class="headerlink" title="一：calico服务启动"></a>一：calico服务启动</h2><p>根据官网教程 <a href="https://docs.projectcalico.org/v3.2/getting-started/kubernetes/installation/calico" target="_blank" rel="noopener">官方文档</a><br>先添加RBAC  </p><pre><code>kubectl apply -f \ https://docs.projectcalico.org/v3.2/getting-started/kubernetes/installation/rbac.yaml</code></pre><p>下载calico.yaml模板并进行更改</p><pre><code>curl \ https://docs.projectcalico.org/v3.2/getting-started/kubernetes/installation/hosted/calico.yaml \ -O</code></pre><p>vim calico.yaml<br>主要对ConfigMap部分进行配置,由于kubernetes集群使用的是外部etcd集群,calico也统一使用该etcd集群。<br>calico.yaml中</p><blockquote><pre><code>kind: ConfigMapapiVersion: v1metadata:  name: calico-config  namespace: kube-systemdata:  etcd_endpoints: "https://192.168.21.11:2379,https://192.168.21.12:2379,https://192.168.21.13:2379"  etcd_ca: "/calico-secrets/etcd-ca"  etcd_cert: "/calico-secrets/etcd-cert"  etcd_key: "/calico-secrets/etcd-key"  calico_backend: "bird"  veth_mtu: "1440"  cni_network_config: |-    {      "name": "k8s-pod-network",      "cniVersion": "0.3.0",      "plugins": [        {          "type": "calico",          "log_level": "info",          "etcd_endpoints": "https://192.168.21.11:2379,https://192.168.21.12:2379,https://192.168.21.13:2379",          "etcd_key_file": "/etc/etcd/ssl/etcd-key.pem",          "etcd_cert_file": "/etc/etcd/ssl/etcd.pem",          "etcd_ca_cert_file": "/etc/etcd/ssl/ca.pem",          "mtu": 1500,          "ipam": {              "type": "calico-ipam"          },          "policy": {              "type": "k8s"          },          "kubernetes": {              "kubeconfig": "/etc/kubernetes/kubelet.conf"          }        },        {          "type": "portmap",          "snat": true,          "capabilities": {"portMappings": true}        }      ]   }\---apiVersion: v1kind: Secrettype: Opaquemetadata:  name: calico-etcd-secrets  namespace: kube-systemdata:  etcd-key: `cat /etc/etcd/ssl/etcd-key.pem | base64 | tr -d '\n'` #对应etcd的ssl文件路径  etcd-cert: `cat /etc/etcd/ssl/etcd.pem | base64 | tr -d '\n'`  etcd-ca: `cat /etc/etcd/ssl/ca.pem | base64 | tr -d '\n'`</code></pre>  </blockquote><p>接着执行</p><pre><code>kubectl apply -f calico.yaml</code></pre><p>稍等一段时间可以看到coredns及calico服务都起来了</p><pre><code>kubectl get po -n kube-system</code></pre><p>此时如果使用官方的测试教程进行测试,可以发现网络是正常的。</p><h2 id="二-k8s高可用集群搭建完成后"><a href="#二-k8s高可用集群搭建完成后" class="headerlink" title="二: k8s高可用集群搭建完成后"></a>二: k8s高可用集群搭建完成后</h2><p>将高可用的master节点起好后,calico的节点会自动部署至各个master节点上.此时会发现:calico-node的节点两个容器才有一个容器是启动成功的。  </p><pre><code>kubectl describe pod calico-node-id -n kube-system</code></pre><p>看到错误:Readiness probe failed: caliconode is not ready: BIRD is not ready: BGP not established with 172.18.0.1<br>出现了奇怪的ip<br>在三台master节点机中查找,发现node02中  </p><pre><code>32: br-fac7e8026658: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN link/ether 02:42:7e:92:0b:14 brd ff:ff:ff:ff:ff:ffinet 172.18.0.1/16 scope global br-fac7e8026658   valid_lft forever preferred_lft foreverinet6 fe80::42:7eff:fe92:b14/64 scope link valid_lft forever preferred_lft forever</code></pre><p>现在还不知道这个ip是怎么产生的//TODO</p><h5 id="安装calicoctl工具"><a href="#安装calicoctl工具" class="headerlink" title="安装calicoctl工具:"></a>安装calicoctl工具:</h5><p>同样根据官方文档操作(注意版本对应)</p><pre><code>cd /usr/local/bincurl -O -L https://github.com/projectcalico/calicoctl/releases/download/v3.2.3/calicoctlchmod +x calicoctl</code></pre><p>因为我们使用的是外部etcd集群,所以需要对calicoctl进行配置,使其能读取calico配置信息。配置文件的位置:/etc/calico/calicoctl.cfg<br>模板:</p><blockquote><pre><code>apiVersion: projectcalico.org/v3kind: CalicoAPIConfigmetadata:spec:  etcdEndpoints:         https://192.168.21.11:2379,https://192.168.21.12:2379,https://192.168.21.13:2379  etcdKeyFile: /etc/etcd/ssl/etcd-key.pem #对应etcd的ssl文件路径  etcdCertFile: /etc/etcd/ssl/etcd.pem  etcdCACertFile: /etc/etcd/ssl/ca.pem</code></pre></blockquote><p>接下来就可以使用calicoctl工具来对calico进行更改。</p><pre><code>calicoctl get nodes  #查看节点  **calicoctl get node node02 -o yaml</code></pre><p>可以看见输出:</p><blockquote><pre><code>apiVersion: projectcalico.org/v3kind: Nodemetadata:  creationTimestamp: 2018-10-12T08:16:05Z  name: cloud02  resourceVersion: &quot;219244&quot;  uid: 1087f828-cdf7-11e8-bc0e-fa163e88cdacspec:  bgp:    ipv4Address: 172.18.0.1/16    ipv4IPIPTunnelAddr: 192.168.160.128  orchRefs:  - nodeName: node02    orchestrator: k8s</code></pre></blockquote><p>这就确认了错误ip的节点</p><pre><code>calicoctl get node node02 -o yaml &gt; caliconode02.yamlvim caliconode02.yaml</code></pre><p>将ip更改正确</p><pre><code>calicoctl apply -f caliconode02.yamlkubectl get po -n kube-system</code></pre><p>可以看到calico-node的节点都正常启动</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注:"></a>备注:</h2><p>* 此时用</p><pre><code>calicoctl node status</code></pre><p>可以发现,并没有分配BGP对等体</p><pre><code>calicoctl get node nodeName</code></pre><p>查看ipv4Address也是正确的<br>**  此时用</p><pre><code>calicoctl node status</code></pre><p>可以看到BGP对等体已经分配,但是有错误</p><blockquote><pre><code>Calico process is running.IPv4 BGP status+--------------+-------------------+-------+----------+--------------------------------+| PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |              INFO              |+--------------+-------------------+-------+----------+--------------------------------+| 192.168.21.13  | node-to-node mesh | up    | 08:16:14 | Established                    || 172.18.0.1   | node-to-node mesh | start | 09:22:01 | Active Socket: Connection      ||              |                   |       |          | refused                        |+--------------+-------------------+-------+----------+--------------------------------+IPv6 BGP statusNo IPv6 peers found.</code></pre></blockquote><p>其中Established即为连同状态.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建kubernetes集群，服务器由openstack提供，通过kubeadm安装高可用。采用coredns，calico网络组件。&lt;/p&gt;
&lt;h1 id=&quot;calico搭建：&quot;&gt;&lt;a href=&quot;#calico搭建：&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="k8s" scheme="http://yoursite.com/tags/k8s/"/>
    
      <category term="calico" scheme="http://yoursite.com/tags/calico/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/10/12/hello-world/"/>
    <id>http://yoursite.com/2018/10/12/hello-world/</id>
    <published>2018-10-12T01:00:06.253Z</published>
    <updated>2018-10-12T01:00:06.253Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
